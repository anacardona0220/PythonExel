Hay muchas fuentes de documentación en línea disponibles para aprender Python y sus bibliotecas para el procesamiento de datos. 
A continuación se presentan algunas de las opciones más populares:

La documentación oficial de Python: El sitio web oficial de Python (https://www.python.org/) proporciona una documentación completa del lenguaje y sus bibliotecas. 
Esta documentación es un excelente recurso para los principiantes y también es útil para los usuarios avanzados que buscan información más detallada.

Documentación de Pandas: La biblioteca Pandas es una herramienta popular para el procesamiento de datos en Python. 
La documentación de Pandas (https://pandas.pydata.org/pandas-docs/stable/) es un recurso muy completo y detallado para aprender a trabajar con esta biblioteca.

Documentación de NumPy: La biblioteca NumPy es otra herramienta popular para el procesamiento de datos en Python. 
La documentación de NumPy (https://numpy.org/doc/) proporciona información detallada sobre las funciones y métodos de la biblioteca.

Documentación de SciPy: SciPy es una biblioteca de Python para matemáticas, ciencias e ingeniería. 
La documentación de SciPy (https://docs.scipy.org/doc/) proporciona una guía completa para trabajar con esta biblioteca.

Documentación de Matplotlib: Matplotlib es una biblioteca de Python para la visualización de datos. 
La documentación de Matplotlib (https://matplotlib.org/stable/contents.html) proporciona una guía completa para trabajar con esta biblioteca.

Además de la documentación, hay muchos tutoriales, cursos y libros disponibles en línea para aprender Python y sus bibliotecas para el procesamiento de datos. 
Algunos de los recursos más populares incluyen Coursera, edX, Udacity, DataCamp, Codecademy, entre otros.


-------------- de macro a python -------------------


Aquí te comparto algunos pasos que podrías seguir para migrar una macro de Excel a Python:

Analiza la funcionalidad de la macro de Excel y divide su tarea en tareas más pequeñas y manejables.

Asegúrate de tener una buena comprensión de los conceptos de programación en Python, incluyendo variables, estructuras de control de flujo, funciones, módulos y librerías.

Investiga si hay alguna librería de Python que puedas utilizar para replicar la funcionalidad de la macro de Excel. Por ejemplo, Pandas es una librería de Python muy útil para el manejo y procesamiento de datos tabulares.

Empieza a escribir el código en Python para realizar cada una de las tareas pequeñas que identificaste en el primer paso. Asegúrate de que cada tarea sea lo más independiente posible, para que puedas probarla y depurarla de manera aislada.

Utiliza la librería que encontraste en el tercer paso para replicar la funcionalidad de la macro de Excel en Python.

Prueba y depura el código paso a paso, utilizando los datos de prueba que tengas disponibles.

Una vez que todas las tareas pequeñas estén funcionando correctamente, combínalas para crear una única secuencia de código que replique la funcionalidad de la macro de Excel.

Optimiza el código para que sea lo más eficiente y escalable posible.

Documenta y comenta el código adecuadamente, de manera que otros programadores puedan entender lo que está sucediendo en cada paso.

Prueba exhaustivamente el código con diferentes conjuntos de datos y casos de uso.

Cabe destacar que migrar una macro de Excel a Python puede requerir mucho tiempo y esfuerzo, por lo que es importante tener una buena comprensión de ambos lenguajes y de la funcionalidad que se desea replicar. También es importante tener en cuenta que Python no tiene todas las funcionalidades que tiene Excel, por lo que es posible que algunas tareas no se puedan replicar directamente.